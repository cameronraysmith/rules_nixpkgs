module(name = "rules_nixpkgs_core_testing")

bazel_dep(name = "rules_nixpkgs_core")
local_path_override(
    module_name = "rules_nixpkgs_core",
    path = "../../core",
)

bazel_dep(name = "intermediate_module")
local_path_override(
    module_name = "intermediate_module",
    path = "tests/intermediate_module",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "nixpkgs_location_expansion_test_file")
local_path_override(
    module_name = "nixpkgs_location_expansion_test_file",
    path = "tests/location_expansion/test_repo",
)

nix_repo = use_extension("@rules_nixpkgs_core//extensions:repository.bzl", "nix_repo")
nix_repo.default(name = "nixpkgs")
nix_repo.github(
    name = "remote_nixpkgs",
    sha256 = "0f8c25433a6611fa5664797cd049c80faefec91575718794c701f3b033f2db01",
    tag = "22.05",
)
nix_repo.http(
    name = "http_nixpkgs",
    sha256 = "0f8c25433a6611fa5664797cd049c80faefec91575718794c701f3b033f2db01",
    strip_prefix = "nixpkgs-22.05",
    url = "https://github.com/NixOS/nixpkgs/archive/refs/tags/22.05.tar.gz",
)
nix_repo.file(
    name = "file_nixpkgs",
    file = "//:nixpkgs.nix",
    file_deps = [
        "//:flake.lock",
    ],
)
nix_repo.expr(
    name = "nixpkgs_content",
    expr = "import ./nixpkgs.nix",
    file_deps = [
        "//:nixpkgs.nix",
        "//:flake.lock",
    ],
)
use_repo(
    nix_repo,
    "file_nixpkgs",
    "http_nixpkgs",
    "nixpkgs",
    "nixpkgs_content",
    "remote_nixpkgs",
)

nix_pkg = use_extension("@rules_nixpkgs_core//extensions:package.bzl", "nix_pkg")
nix_pkg.default(attr = "hello")
nix_pkg.attr(
    name = "attribute-test",
    attr = "hello",
)
nix_pkg.attr(
    name = "nixpkgs-git-repository-test",
    attr = "hello",
    repo = "@remote_nixpkgs",
)
nix_pkg.attr(
    name = "nixpkgs-http-repository-test",
    attr = "hello",
    repo = "@http_nixpkgs",
)
nix_pkg.file(
    name = "nix-file-test",
    attr = "hello",
    file = "//tests:nixpkgs.nix",
)
nix_pkg.file(
    name = "nix-file-deps-test",
    attr = "",
    file = "//tests:hello.nix",
    file_deps = ["//tests:pkgname.nix"],
)
nix_pkg.file(
    name = "relative-imports",
    attr = "hello",
    file = "//tests:relative_imports.nix",
    file_deps = [
        "//:flake.lock",
        "//:nixpkgs.nix",
        "//tests:relative_imports/nixpkgs.nix",
    ],
)
nix_pkg.file(
    name = "output-filegroup-test",
    attr = "",
    file = "//tests:output.nix",
)
nix_pkg.file(
    name = "output-filegroup-manual-test",
    attr = "",
    build_file_content = """
package(default_visibility = [ "//visibility:public" ])
filegroup(
    name = "manual-filegroup",
    srcs = glob(["hi-i-exist", "hi-i-exist-too", "bin/*"]),
)
""",
    file = "//tests:output.nix",
)
nix_pkg.expr(
    name = "expr-attribute-test",
    attr = "hello",
    expr = "import <nixpkgs> { config = {}; overlays = []; }",
)
nix_pkg.expr(
    name = "extra-args-test",
    attr = "",
    expr = "{ packagePath }: (import <nixpkgs> { config = {}; overlays = []; }).${packagePath}",
    nixopts = [
        "--argstr",
        "packagePath",
        "hello",
    ],
)
nix_pkg.expr(
    name = "expr-test",
    attr = "",
    expr = "let pkgs = import <nixpkgs> { config = {}; overlays = []; }; in pkgs.hello",
    # Deliberately not @nixpkgs, to test whether explict repository works.
    repos = {"@file_nixpkgs": "nixpkgs"},
)
nix_pkg.expr(
    name = "nixpkgs-file-repository-test",
    attr = "",
    expr = "with import <nixpkgs> {}; hello",
    repo = "@file_nixpkgs",
)
nix_pkg.expr(
    name = "nixpkgs-local-repository-test",
    attr = "",
    expr = "with import <nixpkgs> {}; hello",
    repo = "@nixpkgs_content",
)
use_repo(
    nix_pkg,
    "attribute-test",
    "expr-attribute-test",
    "expr-test",
    "extra-args-test",
    "hello",
    "nix-file-deps-test",
    "nix-file-test",
    "nixpkgs-file-repository-test",
    "nixpkgs-git-repository-test",
    "nixpkgs-http-repository-test",
    "nixpkgs-local-repository-test",
    "output-filegroup-manual-test",
    "output-filegroup-test",
    "relative-imports",
)

non_module_deps = use_extension("//:non_module_deps.bzl", "non_module_deps")
use_repo(non_module_deps, "nixpkgs_location_expansion_test")
use_repo(non_module_deps, "flake-hello")
use_repo(non_module_deps, "flake-hello-with-build-file")
